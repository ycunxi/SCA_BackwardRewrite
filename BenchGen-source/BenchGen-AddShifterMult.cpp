//
//  BenchGen-AddShifterMult.cpp
//
//  Created by Cunxi Yu on 9/24/14.
//  Copyright (c) 2014 Cunxi Yu. All rights reserved.
//

#include "BenchGen-AddShifterMult.h"
#include <iostream>
#include <fstream>
#include <sstream>
#include <stdio.h>
#include <unistd.h>
using namespace std;
void BenchGenAddShiftMult::AddShifterMult(int x)
{
    string location(getcwd(NULL,0));
    string verilogdirectory="/verilogGenerated/";
    location+=verilogdirectory;
    stringstream outfilename;
    string filename="AddShiftMultiplier";
    int fileint=x;
    outfilename << filename << fileint << "Bits.v";
    string f=outfilename.str();
    string finaloutputfilename;
    finaloutputfilename=location+f;
    //outfile<<finaloutputfilename;
    ofstream outfile(finaloutputfilename);
    outfile<<"/*This Verilog is generated by BechGen software.*/\n"
          "/*Designed by University of Massachusetts, Amherst, VLSI CAD LAB, Cunxi Yu*/\n"
          "/*/  Copyright (c) 2014 Cunxi Yu. All rights reserved. */ \n"
	  "/*  This is NOT verilog format.  It is pesudo-verilog for generate equation files*/\n"
          "/*Contact: ycunxi@umass.edu */"<<endl;
    outfile<<"   output ["<<2*x-1<<":0]"<<endl;
    for (int i=0; i<x; i++) {
        if(i==0)
        {
            {

            for (int m=0;m<x; m++) {
                outfile<<"    assign in"<<i+1<<"_"<<m<<" = b["<<m<<"] & a["<<i<<"]"<<endl;
            }
            for (int m1=0; m1<x; m1++) {
                if(m1==x-1)
                {
                    outfile<<"    assign s"<<i+1<<"_"<<m1<<" = 1'b0;"<<endl;
                    outfile<<"    assign z["<<i<<"] = in"<<i+1<<"_0"<<endl;
                }
                else
                {
                outfile<<"    assign s"<<i+1<<"_"<<m1<<" = in"<<i+1<<"_"<<m1+1<<";"<<endl;
                }
            }
        }
        }
        //if i=0 end
        else
        {
            //input creat
            for (int input_add=0; input_add<x; input_add++) {
                outfile<<"    assign in"<<i+1<<"_"<<input_add<<" = b["<<input_add<<"] & a["<<i<<"];"<<endl;
            }
            
            //adder begin
            outfile<<"    assign adder"<<i<<"_and0 = s"<<i<<"_0] & in"<<i+1<<"_0] ;"<<endl;
            outfile<<"    assign adder"<<i<<"_add_cout[0] = adder"<<i<<"_and0;"<<endl;
            outfile<<"    assign adder"<<i<<"_add_sum[0] = s"<<i<<"_0] ^ in"<<i+1<<"_0];"<<endl;
            for (int q=1; q<=x-1; q++) {
                if (q!=x-1) {
                    outfile<<"    assign adder"<<i<<"_and"<<3*q-2<<" = adder"<<i<<"_add_cout["<<q-1<<"] & s"<<i<<"_"<<q<<"];"<<endl;
                    outfile<<"    assign adder"<<i<<"_and"<<3*q-1<<" = adder"<<i<<"_add_cout["<<q-1<<"] & in"<<i+1<<"_"<<q<<"];"<<endl;
                    outfile<<"    assign adder"<<i<<"_and"<<3*q<<" = s"<<i<<"_"<<q<<"] & in"<<i+1<<"_"<<q<<"];"<<endl;
                    outfile<<"    assign adder"<<i<<"_or"<<q<<" = adder"<<i<<"_and"<<3*q-2<<" | "<<"adder"<<i<<"_and"<<3*q-1<<";"<<endl;
                    outfile<<"    assign adder"<<i<<"_add_cout["<<q<<"] = adder"<<i<<"_or"<<q<<" | ""adder"<<i<<"_and"<<3*q<<";"<<endl;
                    
                    outfile<<"    assign adder"<<i<<"_xor"<<q<<" = s"<<i<<"_"<<q<<"] ^ in"<<i+1<<"_"<<q<<"];"<<endl;
                    outfile<<"    assign adder"<<i<<"_add_sum["<<q<<"] = adder"<<i<<"_xor"<<q<<" ^ "<<"adder"<<i<<"_add_cout["<<q-1<<"];"<<endl;
                }
                else
                {
                    outfile<<"    assign adder"<<i<<"_and"<<3*q-2<<" = adder"<<i<<"_add_cout["<<q-1<<"] & s"<<i<<"_"<<q<<"];"<<endl;
                    outfile<<"    assign adder"<<i<<"_and"<<3*q-1<<" = adder"<<i<<"_add_cout["<<q-1<<"] & in"<<i+1<<"_"<<q<<"];"<<endl;
                    outfile<<"    assign adder"<<i<<"_and"<<3*q<<" = s"<<i<<"_"<<q<<"] & in"<<i+1<<"_"<<q<<"];"<<endl;
                    outfile<<"    assign adder"<<i<<"_or"<<q<<" = adder"<<i<<"_and"<<3*q-2<<" | "<<"adder"<<i<<"_and"<<3*q-1<<";"<<endl;
                    outfile<<"    assign adder"<<i<<"_add_sum["<<q+1<<"] = adder"<<i<<"_or"<<q<<" | adder"<<i<<"_and"<<3*q<<";"<<endl;
                    outfile<<"    assign adder"<<i<<"_xor"<<q<<" = s"<<i<<"_"<<q<<"] ^ in"<<i+1<<"_"<<q<<"];"<<endl;
                    outfile<<"    assign adder"<<i<<"_add_sum["<<q<<"] = adder"<<i<<"_xor"<<q<<" ^ "<<"adder"<<i<<"_add_cout["<<q-1<<"];"<<endl;
                }
            }
            //adder end
            //shifter begin
            if(i!=x-1)
            for (int s_add=0; s_add<=x; s_add++) {
                if (s_add!=x) {
                    outfile<<"    assign s"<<i+1<<"_"<<s_add<<" = "<<"adder"<<i<<"_add_sum["<<s_add+1<<"];"<<endl;
                }
                else
                {
                    outfile<<"    assign s"<<i+1<<"_"<<s_add<<" = 1'b0;"<<endl;
                    outfile<<"    assign z["<<i<<"] = adder"<<i<<"_add_sum[0];"<<endl;
                }
            }
        }
        
    }
    outfile<<"    assign z["<<x-1<<"] = adder"<<x-1<<"_add_sum[0];"<<endl;
    for (int correct_sigout=0; correct_sigout<x; correct_sigout++) {
        outfile<<"    assign z["<<x+correct_sigout<<"] = adder"<<x-1<<"_add_sum["<<correct_sigout+1<<"];"<<endl;
    }
    

    
}

